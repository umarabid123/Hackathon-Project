// "use client";
// import React, { useState } from "react";
// import { useRouter } from "next/navigation";
// import axios from "axios";
// import Heading from "@/components/heading/Heading";
// import InputText from "@/components/inputText/InputText";

// const Page = () => {
	// const router = useRouter();
	// const [email, setEmail] = useState("");
	// const [password, setPassword] = useState("");
	// const signInData = [
	// 	{
	// 		labelText: "Email",
	// 		type: "text",
	// 		placeholder: "Enter your email address",
	// 		onChange: (e) => setEmail(e.target.value),
	// 	},
	// 	{
	// 		labelText: "Password",
	// 		type: "text",
	// 		placeholder: "Enter your Password",
	// 		onChange: (e) => setPassword(e.target.value),
	// 	},
	// ];
	// const handleSignIn = async () => {
	// 	try {
	// 		const response = await axios.post(
	// 			"http://localhost:8000/auth/login",
	// 			{
	// 				email,
	// 				password,
	// 			}
	// 		);
    //         console.log("response", response);
            
	// 		const token = response.data.token;
    //         console.log('token: ', token);
	// 		if (token) {
	// 			localStorage.setItem("token", token);
	// 			router.push("/");
	// 		} else {
	// 			alert(response.data.message);
	// 		}
	// 	} catch (error) {
	// 		console.error(error);
	// 		alert("Sign-in failed");
	// 	}
	// };

// 	return (
// 		<div className="cs-container h-screen flex justify-center">
// 			<div className="my-auto">
// 				<Heading heading={"Sign Up"} level={1} />
// 				<div className="mt-5">
// 					{signInData?.map((item, i) => {
// 						return (
// 							<InputText
// 								labelText={item?.labelText}
// 								type={item?.type}
// 								placeholder={item?.placeholder}
// 								key={i}
// 								onChange={item?.onChange}
// 							/>
// 						);
// 					})}
// 					<button onClick={handleSignIn}>Sign up</button>
// 				</div>
// 			</div>
// 		</div>
// 	);
// };

// export default Page;
'use client'

import { useState } from 'react'
import Layout  from "@/components/layout/Layout"
import { useRouter } from 'next/navigation'
import Link from 'next/link'

export default function LoginPage() {
	const router = useRouter();
	const [email, setEmail] = useState("");
	const [password, setPassword] = useState("");
	const [data, setData] = useState([]);
	

	const signInData = [
		{
			labelText: "Email",
			type: "text",
			placeholder: "Enter your email address",
			onChange: (e) => setEmail(e.target.value),
		},
		{
			labelText: "Password",
			type: "text",
			placeholder: "Enter your Password",
			onChange: (e) => setPassword(e.target.value),
		},
	];
	const handleSignIn = async () => {
		try {
			const response = await axios.post("http://localhost:8000/auth/login", {
				email,
				password,
			});
		
			console.log("API Response: ", response);
		
			const token = response.data?.token; // Safely access token
			console.log("Token: ", token);
		
			if (token) {
				localStorage.setItem("token", token);
				router.push("/");
			} else {
				alert(response.data?.message || "Unexpected error occurred");
			}
		} catch (error) {
			console.error("API Error: ", error);
			alert("Sign-in failed. Please try again.");
		}
		
		
	};

  return (
    <Layout>
     
          <form onSubmit={handleSignIn} className="space-y-6">
            <div>
              <label htmlFor="email" className="block text-sm font-medium text-gray-700">Email</label>
              <input
                type="email"
                id="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
                className="mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400
                focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
                placeholder="you@example.com"
              />
            </div>
            <div>
              <label htmlFor="password" className="block text-sm font-medium text-gray-700">Password</label>
              <input
                type="text"
                id="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
                className="mt-1 block w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400
                focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
                placeholder="password"
              />
            </div>
            <div>
              <button
                type="submit"
                className=""
              >
                Sign In
              </button>
            </div>
          </form>
          <div className="mt-6">
            <div className="relative">
              <div className="absolute inset-0 flex items-center">
                <div className="w-full border-t border-gray-300"></div>
              </div>
              <div className="relative flex justify-center text-sm">
                <span className="px-2 bg-white text-gray-500">Or continue with</span>
              </div>
            </div>
            <div className="mt-6 grid grid-cols-2 gap-3">
              <div>
                <a href="#" className="w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  <span className="sr-only">Sign in with Google</span>
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path d="M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z" />
                  </svg>
                </a>
              </div>
              <div>
                <a href="#" className="w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  <span className="sr-only">Sign in with GitHub</span>
                  <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path fillRule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clipRule="evenodd" />
                  </svg>
                </a>
              </div>
            </div>
          </div>
          <p className="mt-8 text-center text-sm text-gray-600">
            Not a member?{' '}
            <Link href="/signup" className="font-medium text-blue-600 hover:text-blue-500">
              Sign up now
            </Link>
          </p>
        </div>
      </div>
    </Layout>
  )
}



